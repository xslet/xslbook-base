<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="application/xml" href="xsldoc/xsldoc.xsl"?><!-- xslbook-base.xsl 0.1 Copyright (C) 2022 xslet project MIT License --><!--** xslbook-base.xsl ver0.1 - API Document
**
 A XSLT library for xslbook, which provides common named templates and parameters to other xslbook component libraries.

 This program is written in XSLT 1.0.

** Copyright (C) 2022 xslet project
** MIT License
--><xsl:stylesheet xmlns:book="https://github.com/xslet/2020/xslbook" xmlns:do="https://github.com/xslet/2020/xsldo" xmlns:ut="https://github.com/xslet/2020/xslutil" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><!--** A set of utilities for XSLT programs on Web browsers. --><xsl:import href="xslutil.xsl"/><!--** XML data operation libraries for XSLT programs on Web browsers.  --><xsl:import href="xsldo.xsl"/><!--** XML data operation elements for xslbook. --><xsl:import href="xslbook-do.xsl"/><!--**
  Gets the URL of the XSL file to transform a XML file.
 --><xsl:param name="book:xsl_url"><xsl:call-template name="ut:get_xsl_url"/></xsl:param><!--**
  Get the directory path of the XSL file to transform a XML file.
 --><xsl:param name="book:xsl_dir"><xsl:call-template name="ut:get_dir_from_url"><xsl:with-param name="url" select="$book:xsl_url"/></xsl:call-template></xsl:param><!--**
  Gets a value of @id attribute or <attr name="id"> element for the current element if it is present, unless get the ID for the current element which is created by this template.
 --><xsl:template name="book:get_id"><!--** An URL of external data file from an ancestor element. --><xsl:param name="data_url"/><!--** A generated ID of a base node in a data source. --><xsl:param name="data_gid"/><!--** Index of parent <for> element. --><xsl:param name="data_index"/><!--** Index set of ancestor <for> elements. --><xsl:param name="data_indexes"/><!--** Any argument 0. --><xsl:param name="arg0"/><!--** Any argument 1. --><xsl:param name="arg1"/><!--** Any argument 2. --><xsl:param name="arg2"/><xsl:variable name="_id"><xsl:call-template name="book:get_attr"><xsl:with-param name="name">id</xsl:with-param><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/><xsl:with-param name="data_index" select="$data_index"/><xsl:with-param name="data_indexes" select="$data_indexes"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="string-length($_id) != 0"><xsl:value-of select="$_id"/></xsl:when><xsl:otherwise><xsl:text>idxbk</xsl:text><xsl:variable name="_tag_name" select="local-name()"/><xsl:value-of select="$_tag_name"/><xsl:number level="any" format="1" count="*[name() = $_tag_name]"/></xsl:otherwise></xsl:choose></xsl:template></xsl:stylesheet>